<script>

/*!
 * Ext JS Library 3.4.0
 * Copyright(c) 2006-2011 Sencha Inc.
 * licensing@sencha.com
 * http://www.sencha.com/license
 */
Ext.onReady(function(){
    Ext.QuickTips.init();

    // NOTE: This is an example showing simple state management. During development,
    // it is generally best to disable state management as dynamically-generated ids
    // can change across page loads, leading to unpredictable results.  The developer
    // should ensure that stable state ids are set for stateful components in real apps.    
    Ext.state.Manager.setProvider(new Ext.state.CookieProvider());

    // sample static data for the store

    var myData = [
      <% @orders.each do |order| %>
        ['<%= order.name %>','<%= order.diachi %>','<%= order.email %>','<%= order.sdt %>','<%= order.ghichu %>','<%= link_to 'Show', order %> <%= link_to 'Edit', edit_order_path(order) %> <%= link_to 'Destroy', order, method: :delete, data: { confirm: 'Are you sure?' } %>'],
      <% end %>
    ];

    /**
     * Custom function used for column renderer
     * @param {Object} val
     */
    function change(val) {
        if (val > 0) {
            return '<span style="color:green;">' + val + '</span>';
        } else if (val < 0) {
            return '<span style="color:red;">' + val + '</span>';
        }
        return val;
    }

    /**
     * Custom function used for column renderer
     * @param {Object} val
     */
    function pctChange(val) {
        if (val > 0) {
            return '<span style="color:green;">' + val + '</span>';
        } else if (val < 0) {
            return '<span style="color:red;">' + val + '</span>';
        }
        return val;
    }

    // create the data store
    var store = new Ext.data.ArrayStore({
        fields: [
           {name: 'name'},
           {name: 'diachi'},
           {name: 'email'},
           {name: 'sdt'},
           {name: 'ghichu'},
           {name: 'chucnang'}
        ]
    });

    // manually load local data
    store.loadData(myData);

    // create the Grid
    var grid = new Ext.grid.GridPanel({
        store: store,
        columns: [
            {
                id       :'company',
                header   : 'Name', 
                width    : 160, 
                sortable : true, 
                dataIndex: 'name'
            },
            {
                header   : 'Dia chi', 
                width    : 75, 
                sortable : true, 
       
                dataIndex: 'diachi'
            },
            {
                header   : 'Email', 
                width    : 75, 
                sortable : true, 
                renderer : change, 
                dataIndex: 'email'
            },
            {
                header   : 'SDT', 
                width    : 75, 
                sortable : true, 
                renderer : pctChange, 
                dataIndex: 'sdt'
            },
            {
                header   : 'Ghi Chu', 
                width    : 85, 
                sortable : true, 
                renderer : pctChange, 
                dataIndex: 'ghichu'
            },
            {
                header   : 'Chuc nang', 
                width    : 150, 
                dataIndex: 'chucnang'
            }
        ],
        stripeRows: true,
        autoExpandColumn: 'company',
        height: 500,
        width: '100%',
        title: 'Array Grid',
        // config options for stateful behavior
        stateful: true,
        stateId: 'grid'
    });

    // render the grid to the specified div in the page
    grid.render('aaaaa');
});

</script>

<p id="notice"><%= notice %></p>

<h1>Orders</h1>
      <div id = "aaaaa"></div>